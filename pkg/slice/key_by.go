package slice

// KeyBy создает мапу, где ключами являются результаты выполнения функции fn над элементами среза.
//
// Эта функция применяет функцию fn ко всем элементам среза и сохраняет результат в виде ключа мапы.
// Соответствующим значением мапы становится сам элемент среза.
//
// Параметры:
//
//	slice - Срез значений параметризованного типа T.
//	fn - Функция, принимающая элемент типа T и возвращающая ключ типа K.
//
// Возвращаемое значение:
//
//	Мапа, где ключи - результаты применения fn к элементам среза, а значения - соответствующие элементы среза.
//
// Примеры:
//
//	KeyBy([]int{1, 2, 3}, func(x int) int { return x * 2 })  // Возвращает мапу map[int]int{2: 1, 4: 2, 6: 3}
//	KeyBy([]string{"apple", "banana", "cherry"}, strings.ToUpper)  // Возвращает мапу map[string]string{"APPLE": "apple", "BANANA": "banana", "CHERRY": "cherry"}
//
// Ошибки:
//
//	Функция не вызывает ошибок.
func KeyBy[T any, K comparable](slice []T, fn func(T) K) map[K]T {
	result := make(map[K]T)

	for _, elem := range slice {
		key := fn(elem)
		result[key] = elem
	}

	return result
}
